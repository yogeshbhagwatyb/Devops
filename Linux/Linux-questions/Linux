How to check schedule jobs
crontab -l

If cron job did not work how would you check
check system time
crontab entry
check /var/log/messages

To check services
sudo systemctl status jenkins
sudo systemctl start jenkins
sudo systemctl restart jenkins
sudo systemctl stop jenkins

To see free disk
df -h = Disk Free/Filesystem in Human readable format
df -k = Show in kilobyte
df -BG = Show in gigabyte
du -sh /home/ubuntu = Disk Usage of Summary of specified directory rather than all in Human redable format
du -h /home/ubuntu = Same as above

To find folders
find /path/to/search -type d -name "folder_name"
find /etc -type d -name "sshd" = d directory 
find / -type f -name "filename.txt"
find /home/ubuntu -type f -name "1.txt" = f file

How to check cpu usage for a process
ps aux = To see detail view of process
top = To see utilization and monitoring
PID (Process ID): This column displays a unique identifier assigned to each process by the operating system. Every process running on the system has a PID, which is used to identify and manage it.

USER: This column shows the username of the user who launched the process. It helps identify which users are running which processes on the system.
PR (Priority): The priority of the process determines its importance in the system's scheduling algorithm. Processes with higher priorities are given more CPU time. Lower values indicate higher priority.
NI (Nice value): The nice value is used to adjust the priority of a process. It ranges from -20 to 19, with lower values indicating higher priority. Processes with higher nice values are less likely to get CPU time, allowing them to run in the background without affecting foreground tasks.
VIRT (Virtual Memory Usage): This column displays the total virtual memory used by the process. It includes all memory the process can access, including shared libraries and memory-mapped files.
RES (Resident Memory Usage): Resident memory usage represents the portion of physical memory (RAM) currently allocated to the process and actively being used.
SHR (Shared Memory Size): This column shows the amount of shared memory used by the process. Shared memory is memory that can be accessed by multiple processes, typically used for inter-process communication.
%CPU (Percentage of CPU Usage): This column displays the percentage of CPU time consumed by the process since the last update of top. It indicates the amount of CPU resources the process is using relative to the total available CPU resources.
%MEM (Percentage of Memory Usage): This column shows the percentage of physical memory (RAM) used by the process relative to the total available memory on the system.
TIME+ (Total CPU Time): This column displays the total CPU time consumed by the process since it started. It includes both user-mode and kernel-mode CPU time.
COMMAND: This column shows the command name or full path of the executable associated with the process. It helps identify what each process is doing based on the command it's running.

Options
Quit top (q): Pressing q will quit the top command and return you to the terminal prompt.
Kill a process by specifying its PID (k): Press k and then enter the PID (Process ID) of the process you want to kill. After entering the PID, press Enter, and then confirm the action by typing y or Y and pressing Enter again.
Change the priority of a process (r): Press r and then enter the PID of the process for which you want to change the priority. After entering the PID, press Enter, and then you will be prompted to enter the new priority value. Once you've entered the new priority value, press Enter again to confirm the change.
Filter processes by a specific user (u): Press u and then enter the username of the user whose processes you want to filter. After entering the username, press Enter, and top will display only the processes associated with that user.
Sort processes by memory usage (M): Press M to sort the processes by memory usage, with the process using the most memory listed first.
Sort processes by CPU usage (P): Press P to sort the processes by CPU usage, with the process using the most CPU listed first.
Sort processes by PID (N): Press N to sort the processes by PID (Process ID), with the lowest PID listed first.
Select and toggle display of specific fields (f): Press f to bring up a menu that allows you to select and toggle the display of specific fields in the process list. Use the arrow keys to navigate the menu, press Space to select or deselect a field, and press Enter to apply your changes.

Using pgrep Command: If you know the name of the process, you can use pgrep to find the PID. For example, to find the PID of the nginx process:
pgrep process name
pgrep nginx

To see or find the particular process
ps aux | grep nginx

To delete some process
ps aux = from here we can get PID
kill PID

Networking
netstat = Network Statatics
netstat -nr = netstat -n to display Numerical address and r to display kernal Routing table
Overall, netstat -nr provides a snapshot of the current routing table in the system,

netstat -putn 
-putn: These are options (flags) that modify the behavior of the netstat command:
-p: This option tells netstat to display the process ID (PID) and the name of the program that owns each socket or network connection.
-u: This option tells netstat to display UDP (User Datagram Protocol) connections.
-t: This option tells netstat to display TCP (Transmission Control Protocol) connections.
-n: This option tells netstat to display numerical addresses instead of resolving hostnames and service names. It prevents netstat from performing DNS resolution, which can speed up the command's execution.
 
netstat -putn | grep :22 = to find particulary :22 connection

Password authentication file
/etc/ssh/sshd_config

Sudoers file to give permission
/etc/sudoers = user1   ALL=(ALL:ALL) ALL

SSH from another sever
Server1
adduser user1 = Create user
vim /etc/ssh/sshd_config = Yes on Password authentication
sudo systemctl restart sshd = Reload sshd
Server2 
ssh user@Server1publicip

What is Kernal
What is Components of Linux
What is swap space
What is alias
Environment varibale video
Ownership video

SCP
Secure Copy file and directiories between local and remote or two remote system
scp -i /path/to/private_key.pem /path/to/local/file.txt user@remote_host:/path/to/destination
scp -i mykey.pem /home/ubuntu/1.txt ubuntu@34.201.69.205:/home/ubuntu = for local to remote and remote to remote with public and private ip
#####################################################################################################
Remote to Remote 
Upload pemfile on server and give read write permissions to user 
chmod u=rw
chmod go=
or chmod u=rw, go=
scp -i mykey.pem /home/ubuntu/1.txt ubuntu@34.201.69.205:/home/ubuntu
###########################################################################
Remote to local
scp -i key.pem ubuntu@34.229.177.56:/home/ubuntu/2.txt "\c\Users\12816\Desktop\Azure"

To check pacakage installed or not
dpkg --get-selections | grep package_name = Debian Pacakge Manager

To check number and type of processors used by linux
cat /proc/cpuinfo
lscpu

To zip and unzip file
gzip filename
gunzip filename

To zip and unzip folders
In this we have to zip folder by using command tar and then it will craete file and we need to craete zip file from this and final output of file is myfile.tar.gz
tar cvf file.tar newfolder = Tape ARchive Create an archive Versbose Filename of the archive 
-c: This option specifies that you want to create an archive.
-v: This option stands for "verbose" and will display a list of files being archived.
-f: This option allows you to specify the filename of the archive.
tar cvf (entername before .tar which you to craete file) (folder name which you want to compressed)

tar xvf file.tar = EXtract
tar xvf (File which you want unzip)
############################################################################################
In this we have to zip folder by using command tar and then it will craete file and we need to craete zip file from this
But we can do it by single command
tar -zcvf myfile.tgz myfolder = gZip
-z: Compress the archive using gzip.
-c: Create a new archive.
-v: Verbose mode, which displays the progress of the operation.
-f: Allows you to specify the filename of the archive.
So, when you run this command, it will create a compressed archive file named myfile.tgz containing all the files and subfolders within the myfolder directory.
tar -zcvf (entername before .tgz which you to craete file) (folder name which you want to compressed)
tar -zxvf myfile.tgz myfolder = gZip


To see all the environment variables
env
printenv

Which command displays memory usage including the ammount of swap space being used
free -h = Human readable

In short, the lsblk command lists information about block devices (storage devices) attached to the system, including their names, sizes, and relationships, in a hierarchical view.
lsblk
lsblk -f

To see about vm
cat /etc/os-release
cat /etc/issue
uname -a

Pacakage management 
sudo apt-get update = To update the system, 
sudo apt-get upgrade = To upgrade the system, In upgrade it will delete older version or files and moved to new and we cannot rollback
/var/cache/apt/archives = Saved all cached files
sudo apt-get clean = Cleared all cached data of system
sudo apt-get remove nginx = Delete only software
sudo apt-get purge nginx = Delete with configuration files
sudo apt-get dist-upgrade = It perfirm distribution upgrade or updgrade kernal


#############################################################################################
21/02/24
#############################################################################################

Upgrade server
sudo apt-get update = Update server
sudo apt list --upgradable = To see the list of upgrade pacakges
sudo apt install --only-upgrade (pacakagename) = Update specific pacakage
sudo apt upgrade = Upgrade all the pacakge

Crontab
https://crontab.cronhub.io/ = To see cron time
crontab -l = To show all the current jobs
crontab -e = To edit or add new jobs
*	*	*	*	*
Minutes (0-59) 
	Hour (0-23)
		Day of the month (1-31)
			Month (1-12)
				Day of the week (0-6) (Sunday=0)
Create cron job
create bash script in /home/ubuntu
file.sh >> 
#!/bin/bash

touch newfile
#

chmod ugo=rwx file.sh
crontab -e
40 10 * * * cd /home/ubuntu/ && ./file.sh

Ownership
sudo chown jenkins:jenbkins file.txt = It will change user and group of file.txt
sudo chown (user):(group) file.txt
sudo chgrp jenkins file.txt = It will change group of file.txt

Remove Directory and File
rm filename
rmdir directoryname
rm -rf directoryname


What is Kernal
What is Components of Linux
What is swap space
What is alias
Environment varibale video
Ownership video = Done

Log rotation demo
Log rotation config files
/etc/logrotate.conf
/etc/logrotate.d

#################################################################################
Log file location
/var/log
cd /var/log
mkdir myapp = Create directory
cd /myapp
mkdir archive
touch 1.log
truncate -s 15M 1.log = To incraese size of any file 
truncate -s (size you want to required) (filename)
cd /etc/logrotate.d/ = Go to this 
vim myapp and paste below code
/var/log/myapp/*.log{
        daily
        size 1M
        olddir /var/log/myapp/archive
        compress
}

logrotate -d /etc/logrotate.conf = To see status 
logrotate /etc/logrotate.conf = Manual trigeering log rotation
###################################################################################

To send logs to s3
Configure Nginx Logging:
Ensure that Nginx is configured to log in a format that's compatible with log rotation. Typically, you'll find this configuration in your Nginx configuration file (nginx.conf). An example log format configuration might look like this:
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
access_log /var/log/nginx/access.log main;


Set Up Log Rotation:
Configure log rotation for Nginx so that logs are rotated daily. This can typically be done using a tool like logrotate in Unix-like systems. Create a log rotation configuration file for Nginx (e.g., /etc/logrotate.d/nginx) with the appropriate settings to rotate logs daily. An example configuration might look like this:
/var/log/nginx/access.log {
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 0640 nginx adm
    sharedscripts
    postrotate
        /etc/init.d/nginx reload > /dev/null
    endscript
}
Adjust the paths and options according to your setup and preferences.

Install AWS CLI:
Install the AWS Command Line Interface (CLI) if you haven't already. You can follow the instructions provided in the AWS documentation: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html

Configure AWS Credentials:
Configure AWS credentials for the user who will be executing the script to upload logs to S3. You can set up AWS credentials using the aws configure command or by setting environment variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION).

Write a Script to Upload Logs to S3:
Write a script that uploads rotated log files to an S3 bucket. Here's an example bash script:
#!/bin/bash

# Set variables
LOG_DIR="/var/log/nginx"
S3_BUCKET="your-s3-bucket"
DATE=$(date "+%Y-%m-%d")

# Upload rotated log files to S3
aws s3 cp "$LOG_DIR/access.log-$DATE.gz" "s3://$S3_BUCKET/nginx/access.log-$DATE.gz"
Adjust the variables LOG_DIR and S3_BUCKET according to your setup.

Schedule Script Execution:
Schedule the script to run daily using a cron job. Edit the crontab file using crontab -e and add a line like this:
0 0 * * * /path/to/upload_script.sh

This will execute the script every day at midnight.

By following these steps, Nginx logs will be rotated daily, and the rotated logs will be uploaded to your specified S3 bucket automatically.


/etc/passwd:
Contains information about user accounts on the system, including usernames, user IDs (UIDs), group IDs (GIDs), home directories, and default shells.
Example entry: username:x:1000:1000:John Doe:/home/username:/bin/bash

/etc/shadow:
Stores encrypted password and password-related information for user accounts.
Accessible only by the root user and the shadow group.
Example entry: username:$6$H8X0/Lu7$ExoXqQVBlMtpSG6.J7n0DvFayZ1ldSdQHLkj3aCY1QZyCJQrvEoDP8n9TQGZ5.b...:18912:0:99999:7:::

/etc/group:
Contains information about groups on the system, including group names, GIDs, and a list of member usernames.
Example entry: groupname:x:1001:user1,user2,user3

/etc/ssh/sshd_config:
Configuration file for the OpenSSH server (sshd). Defines settings for SSH server behavior, security, and authentication.
Example settings: Port 22, PermitRootLogin no, PasswordAuthentication yes

/etc/sudoers:
Configuration file for the sudo command. Defines which users and groups are allowed to run commands as superusers and with what privileges.
Accessed and edited using the visudo command.
Example entry: john ALL=(ALL:ALL) ALL

/etc/profile:
A system-wide shell initialization file executed for login shells. Defines environment variables and sets up the user's shell environment.
System-wide configuration that affects all users.
Commonly used to set the PATH variable and define global environment settings.

/etc/hosts:
A simple text file that maps IP addresses to hostnames and is used for local DNS resolution.
Typically used for defining local hostnames and IP addresses, especially in small networks or for testing purposes.

/etc/fstab:
Configuration file that contains information about disk drives and partitions. Defines how and where filesystems should be mounted during the system boot process.
Example entry: /dev/sda1 / ext4 defaults 0 1

/etc/resolv.conf:
Configuration file for DNS resolver library. Specifies the DNS servers, domain search order, and other resolver options.
Example entry: nameserver 8.8.8.8

/etc/nologin:
A file that, when present, prevents non-root users from logging into the system. It is commonly used to temporarily disable logins during maintenance or system changes.
