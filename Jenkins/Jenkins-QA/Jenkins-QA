##############################################################################################################################################
Add ssh keys to Github

Create key
	ssh-keygen
	cd .ssh = Here you can find public key and private key
You have to upload public on github
	Repository > Setting > DeployKeys > AddKeys > Give name and paste public key
Then 
	Manage jenkins > Credeentials > Sysytem > Global credentilas > Add credentilas > Select SSH username with private key > Paste Private key in

##############################################################################################################################################
Agent Installation

Dashboard > Manage Jenkins > Nodes > 
New Node 
	Node name = Any
	Type = Permanent Agent (Select) or Copy Existing Node
	Name = any
	Description = any
	Number of executors = any
	Remote root directory = /home/ubuntu ( You can give any directory but this directory should be present there)
	Labels = linux (You can give any)
	Usage = any
	Launch method = Launch agent by connecting it to the controller
	Availability = any
		save
		
Dashboard > Manage Jenkins > Configure global securtity
	Agents =	Fixed (50000)
				Random
				Disable
				
Node virtual machine
	sudo apt update
	sudo apt install fontconfig openjdk-17-jre
	java -version
	curl -sO http://34.201.69.205:8080/jnlpJars/agent.jar
	java -jar agent.jar -url http://34.201.69.205:8080/ -secret 
	44f8ee4963e5309d6c2723512b53d9d56b44bd57547c6eab748a50da71c5245a -name N1 -workDir "/home/ubuntu"
	
Sample pipleine 
	pipeline {
    agent {
        label 'linux'
    }
    

    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
                sh 'sudo apt update' // Update package lists
                sh 'sudo apt install -y nginx' // Install Nginx                
            
            }
        }
    }
}
##############################################################################################################################################
Gmail notification

1. Dashboard > Manage Jenkins > System
	E-mail Notification
		SMTP server = smtp.gmail.com
		Default user e-mail suffix 
			Use SMTP Authentication
				User Name = yogeshbhagwatyb7@gmail.com
				Password = xggh dimb mfvr gleq ( Paste here "App password = Generate new password (xggh dimb mfvr gleq)" )

	SMTP Port = 465
	Test configuration by sending test e-mail
		Test e-mail recipient = yogeshbhagwatyb7@gmail.com
		
2. Gmail configuration

Setting > Security
	Two step verification = On
	App password = Generate new password (xggh dimb mfvr gleq)
	
3. Install plug in	
	Dashboard > Manage Jenkins > Plugins > Availabile > Email Extension TemplateVersion
	


4. Dashboard > Manage Jenkins > System > Extended E-mail Notification
	SMTP server = smtp.gmail.com
	SMTP Port = 465
	Advanced
		Credentials 
			username = yogeshbhagwatyb7@gmail.com
			password = xggh dimb mfvr gleq ( Paste here "App password = Generate new password (xggh dimb mfvr gleq)" )
			
5. Post-build Actions
	Editable Email Notification
		Project From = admin or any
		Project Recipient List = yogeshbhagwatyb7@gmail.com
		Project Reply-To List = yogeshbhagwatyb7@gmail.com (When we replay to mail it will reply "Project Reply-To List = yogeshbhagwatyb7@gmail.com" this mail id
		Content Type = Plain or Html
		Default Subject = $DEFAULT_SUBJECT
		Default Content = Hi email from Jenkins, $DEFAULT_CONTENT
		Attachments = 
		Attach Build Log = Attach or Compress and attach or Dont
		
##############################################################################################################################################

Webhook

GitRepos setting > Deploy keys > Webhooks > Add Webhooks
	Payload URL = http://44.202.3.187:8080/github-webhook/
	Content type = application/json
	Which events would you like to trigger this webhook = Just the push event(y), Send me everything, Let me select individual events
		add webhook
		
Jenkins
	Pipeline
		Build Triggers = GitHub hook trigger for GITScm polling
	
##############################################################################################################################################	

Archive to Artifact
Jenkins
	Project
		Post-build Actions
			Archive the artifacts
				Files to archive = file.txt
		Build Steps
			Execute shell 
				Command = echo hello > file.txt

Copy artifacts from another project				
Jenkins
	Project
		Add build steps
			Copy artifacts from another project
				Project name = Declare project name from where you to copy artifacts
				Which build = Last build and many more
				Artifacts to copy = file.txt (Name of the file)
				Artifacts not to copy =
				Target directory = 
				Parameter filters =
	
##############################################################################################################################################

